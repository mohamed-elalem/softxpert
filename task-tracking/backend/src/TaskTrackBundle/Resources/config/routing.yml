task_track_homepage:
    path:     /
    defaults: { _controller: TaskTrackBundle:Default:index }
    methods: [POST]
    
about_us_page:
    path: /about
    defaults: { _controller: TaskTrackBundle:AboutPage:aboutUs }
    methods: [GET]

revoke_refresh_token:
    path: /api/logout
    defaults: { _controller: TaskTrackBundle:User:logout }
    methods: [DELETE]

register:
    path: /api/register
    defaults: { _controller: TaskTrackBundle:User:registerTrainee }
    methods: [POST]
    
register_supervisor:
    path: /api/admin/supervisors
    defaults: { _controller: TaskTrackBundle:User:registerSupervisor }
    methods: [POST]
    
get_supervisors:
    path: /api/admin/supervisors
    defaults: { _controller: TaskTrackBundle:User:getAllSupervisors }
    methods: [GET]
    
get_trainees:
    path: /api/{role}/trainees/{page}
    defaults: { _controller: TaskTrackBundle:User:getAllTrainees, page:1 }
    methods: [GET]
    requirements:
        role: '(admin|supervisor)'

check:
    path: /api
    defaults: { _controller: TaskTrackBundle:User:api }
    
get_users:
    path: /api/admin/users/{page}
    defaults: { _controller: TaskTrackBundle:User:getFilteredUsers, page:1 }
    methods: [GET]
    requirements:
        page: '\d*'

#get_trainees:
#    path: /api/supervisor/users
#    defaults: { _controller: TaskTrackBundle:User:getAllTrainees }
#    methods: [GET]

get_user:
    path: /api/{role}/{type}/{id}/info
    defaults: { _controller: TaskTrackBundle:User:getUser }
    methods: [GET]
    requirements:
        id: '\d+'
        type: 'users|supervisors|trainees'
        role: 'admin|supervisor'


get_user_tasks:
    path: /api/supervisor/trainees/{user_id}/tasks/{page}
    defaults: { _controller: TaskTrackBundle:User:getUserTasks, page:1 }
    requirements:
        user_id: '\d+'
        page: '\d*'
    methods: [GET]
    
    
 
get_my_tasks:
    path: /api/tasks
    defaults: { _controller: TaskTrackBundle:User:getMyTasks}
    methods: [GET]
    
get_my_recommended_tasks:
    path: /api/tasks/recommended
    defaults: { _controller: TaskTrackBundle:User:getMyRecommendedTasks }
    methods: [GET]
        
get_supervisor_challenges:
    path: /api/supervisor/challenges/{page}
    defaults: { _controller: TaskTrackBundle:User:getMyChallenges, page: 1 }
    methods: [GET]
    requirements:
        page: '\d*'
    
create_new_challenge:
    path: /api/supervisor/challenges
    defaults: { _controller: TaskTrackBundle:User:createNewChallenge }
    methods: [POST]
    
delete_user:
    path: /api/admin/users
    defaults: { _controller: TaskTrackBundle:User:deleteUser }
    requirements:
        id: '\d+'
    methods: [DELETE]
    
get_authenticated:
    path: /api/{role}
    defaults: { _controller: TaskTrackBundle:User:getAuthenticatedUser }
    methods: [GET]
    requirements:
        role: "(admin|supervisor|user)"

get_user_details_admin:
    path: /api/admin/users/{id}
    defaults: { _controller: TaskTrackBundle:User:getUser }
    methods: [GET]
    requirements:
        id: '\d+'
    
update_user:
    path: /api/{role}
    defaults: { _controller: TaskTrackBundle:User:updateUserInfo }
    methods: [PUT]
    requirements:
        role: "(admin|supervisor|user)"
        
#trainee_challenges_register:
#    path: /api/supervisor/trainees/{trainee_id}/challenges
#    defaults: { _controller: TaskTrackBundle:User:getMyChallenges }
#    methods: [GET]
#    requirements:
#        trainee_id: '\d+'

new_task:
    path: /api/supervisor/trainees/{user_id}/challenges
    defaults: { _controller: TaskTrackBundle:User:createNewTask }
    methods: [POST]
    requirements:
        trainee_id: '\d+'
        
update_challenge:
    path: /api/supervisor/challenges
    defaults: { _controller: TaskTrackBundle:User:updateChallenge }
    methods: [PUT]
    
add_challenge_child:
    path: /api/supervisor/challenges
    defaults: { _controller: TaskTrackBundle:User:addChallengeChild }
    methods: [PATCH]
    
get_supervisor_filtered_tasks:
    path: /api/supervisor/tasks/{page}
    defaults: { _controller: TaskTrackBundle:getSupervisorFilteredTasks, page:1 }
    methods: [GET]
    requirements: 
        page: '\d*'
        
get_trainee_filtered_tasks:
    path: /api/tasks/{page}
    defaults: { _controller: TaskTrackBundle:User:getTraineeFilteredTasks, page:1 }
    methods: [GET]
    requirements:
        page: '\d+'
        
get_unassigned_challenges:
    path: /api/supervisor/trainees/{user_id}/challenges/{page}
    defaults: { _controller: TaskTrackBundle:User:getUnassignedChallenges, page:1}
    methods: [GET]
    requirements:
        page: '\d*'

get_challenge_children:
    path: /api/supervisor/challenges/{challenge_id}/dependents/{page}
    methods: [GET]
    defaults: { _controller: TaskTrackBundle:User:getChallengeChildren, page:1 }
    requirements:
        page: '\d*'
        

delete_supervisor_challenge:
    path: /api/supervisor/challenges
    methods: [DELETE]
    defaults: { _controller: TaskTrackBundle:User:deleteChallenge }
    
delete_user_task:
    path: /api/supervisor/trainees/{user_id}/tasks
    methods: [DELETE]
    defaults: { _controller: TaskTrackBundle:User:deleteTask }
    requirements: 
        user_id: '\d+'
        
update_task_score:
    path: /api/supervisor/trainees/{user_id}/tasks/{task_id}/score
    methods: [PUT]
    defaults: { _controller: TaskTrackBundle:User:updateUserTaskScore }
    requirements:
        user_id: '\d+'
        task_id: '\d+'
    
update_task_done:
    path: /api/supervisor/trainees/{user_id}/tasks/{task_id}/done
    methods: [PUT]
    defaults: { _controller: TaskTrackBundle:User:updateTaskDone }
    requirements:
        user_id: '\d+'
        task_id: '\d+'
        
update_task_duration:
    path: /api/supervisor/trainees/{user_id}/tasks/{task_id}/duration
    methods: [PUT]
    defaults: { _controller: TaskTrackBundle:User:updateUserTaskDuration }
    requirements:
        user_id: '\d+'
        task_id: '\d+'
        
get_single_challenge:
    path: /api/supervisor/challenges/{challenge_id}/info
    methods: [GET]
    defaults: { _controller: TaskTrackBundle:User:getSingleChallenge }
    
toggle_task_in_progress:
    path: /api/tasks/{task_id}/in_progress/toggle
    methods: [PUT]
    defaults: { _controller: TaskTrackBundle:User:toggleTaskInProgress }